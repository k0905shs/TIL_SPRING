V1
    어드바이스와 포인트컷 한번에 사용
V2
    어드바이스와 포인트컷 분리
V3
    포인트컷 특정 대상 경로 지정
V4
    포인트컷 다른 클래스로 분류해서 적용
V5
    어드바이스 실행 순서
    어드바이스는 기본적으로 순서를 보장하지 않는다. 순서를 지정하고 싶으면 @Aspect 적용 단위로
    org.springframework.core.annotation.@Order 애노테이션을 적용해야 한다. 문제는 이것을
    어드바이스 단위가 아니라 클래스 단위로 적용할 수 있다는 점이다. 그래서 지금처럼 하나의 애스펙트에
    여러 어드바이스가 있으면 순서를 보장 받을 수 없다. 따라서 애스펙트를 별도의 클래스로 분리해야 한다.
V6
    어드바이스 종류
    Around, Before, AfterReturning, AfterThrowing, After


포인트컷 (pointcut Test 참조)
    execution(접근제어자? 반환타입 선언타입?메서드이름(파라미터) 예외?)

        execution(public String hello.aop.order.aop.member.MemberServiceImpl.hello(String))
            접근제어자?: public
            반환타입: String
            선언타입?: hello.aop.member.MemberServiceImpl
            메서드이름: hello
            파라미터: (String)
            예외?: 생략

        execution(* *(..))
            접근제어자?: 생략
            반환타입: *
            선언타입?: 생략
            메서드이름: *
            파라미터: (..)
            예외?: 없음

        execution(* hello.aop..*.*(..)) .. 해당 위치의 패키지와 그 하위 패키지도 포함
        execution(* hello.aop.*.*(..)) . 정확하게 해당 위치의 패키지

    더 자세한거는 테스트 케이스 보면서 공부하기!!