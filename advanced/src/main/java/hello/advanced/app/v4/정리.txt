-정리
    기존에 반복되었던 로그 생성 로직을 템플릿 메서드 패턴을 사용해서 추상 클래스로 정의해 놓고
    추상 메소드를 구현하여 그 사이에 핵심 비즈니스 로직을 넣는 방식으로 기존 코드를 리팩토링 하였다.

-문제
    템플릿 메서드 패턴은 상속을 사용한다. 따라서 상속에서 오는 단점들을 그대로 안고간다. 특히 자식
    클래스가 부모 클래스와 컴파일 시점에 강하게 결합되는 문제가 있다. 이것은 의존관계에 대한 문제이다.
    자식 클래스 입장에서는 부모 클래스의 기능을 전혀 사용하지 않는다.

    상속을 받는 다는 것은 특정 부모 클래스를 의존하고 있다는 것이다. 자식 클래스의 extends 다음에 바로
    부모 클래스가 코드상에 지정되어 있다. 따라서 부모 클래스의 기능을 사용하든 사용하지 않든 간에 부모
    클래스를 강하게 의존하게 된다.

    자식 클래스 입장에서는 부모 클래스의 기능을 전혀 사용하지 않는데, 부모 클래스를 알아야한다. 이것은
    좋은 설계가 아니다. 그리고 이런 잘못된 의존관계 때문에 부모 클래스를 수정하면, 자식 클래스에도 영향을
    줄 수 있다.

-해결 방안
    전략 패턴(Strategy Pattern)